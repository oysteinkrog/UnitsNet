//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToVolumeFlow
{
    /// <summary>
    /// A number to VolumeFlow Extensions
    /// </summary>
    public static class NumberToVolumeFlowExtensions
    {
        /// <inheritdoc cref="VolumeFlow.FromAcreFeetPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow AcreFeetPerDay<T>(this T value) =>
            VolumeFlow.FromAcreFeetPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromAcreFeetPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow AcreFeetPerHour<T>(this T value) =>
            VolumeFlow.FromAcreFeetPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromAcreFeetPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow AcreFeetPerMinute<T>(this T value) =>
            VolumeFlow.FromAcreFeetPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromAcreFeetPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow AcreFeetPerSecond<T>(this T value) =>
            VolumeFlow.FromAcreFeetPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCentilitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow CentilitersPerDay<T>(this T value) =>
            VolumeFlow.FromCentilitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCentilitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CentilitersPerHour<T>(this T value) =>
            VolumeFlow.FromCentilitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCentilitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CentilitersPerMinute<T>(this T value) =>
            VolumeFlow.FromCentilitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCentilitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CentilitersPerSecond<T>(this T value) =>
            VolumeFlow.FromCentilitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicCentimetersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicCentimetersPerMinute<T>(this T value) =>
            VolumeFlow.FromCubicCentimetersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicDecimetersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicDecimetersPerMinute<T>(this T value) =>
            VolumeFlow.FromCubicDecimetersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicFeetPerHour<T>(this T value) =>
            VolumeFlow.FromCubicFeetPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicFeetPerMinute<T>(this T value) =>
            VolumeFlow.FromCubicFeetPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicFeetPerSecond<T>(this T value) =>
            VolumeFlow.FromCubicFeetPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerDay<T>(this T value) =>
            VolumeFlow.FromCubicMetersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerHour<T>(this T value) =>
            VolumeFlow.FromCubicMetersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerMinute<T>(this T value) =>
            VolumeFlow.FromCubicMetersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerSecond<T>(this T value) =>
            VolumeFlow.FromCubicMetersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMillimetersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMillimetersPerSecond<T>(this T value) =>
            VolumeFlow.FromCubicMillimetersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerDay<T>(this T value) =>
            VolumeFlow.FromCubicYardsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerHour<T>(this T value) =>
            VolumeFlow.FromCubicYardsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerMinute<T>(this T value) =>
            VolumeFlow.FromCubicYardsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerSecond<T>(this T value) =>
            VolumeFlow.FromCubicYardsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromDecilitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow DecilitersPerDay<T>(this T value) =>
            VolumeFlow.FromDecilitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromDecilitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow DecilitersPerHour<T>(this T value) =>
            VolumeFlow.FromDecilitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromDecilitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow DecilitersPerMinute<T>(this T value) =>
            VolumeFlow.FromDecilitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromDecilitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow DecilitersPerSecond<T>(this T value) =>
            VolumeFlow.FromDecilitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilolitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilolitersPerDay<T>(this T value) =>
            VolumeFlow.FromKilolitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilolitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilolitersPerHour<T>(this T value) =>
            VolumeFlow.FromKilolitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilolitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilolitersPerMinute<T>(this T value) =>
            VolumeFlow.FromKilolitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilolitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilolitersPerSecond<T>(this T value) =>
            VolumeFlow.FromKilolitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilousGallonsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilousGallonsPerMinute<T>(this T value) =>
            VolumeFlow.FromKilousGallonsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerDay<T>(this T value) =>
            VolumeFlow.FromLitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerHour<T>(this T value) =>
            VolumeFlow.FromLitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerMinute<T>(this T value) =>
            VolumeFlow.FromLitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerSecond<T>(this T value) =>
            VolumeFlow.FromLitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMegalitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow MegalitersPerDay<T>(this T value) =>
            VolumeFlow.FromMegalitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMegaukGallonsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow MegaukGallonsPerSecond<T>(this T value) =>
            VolumeFlow.FromMegaukGallonsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMicrolitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow MicrolitersPerDay<T>(this T value) =>
            VolumeFlow.FromMicrolitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMicrolitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow MicrolitersPerHour<T>(this T value) =>
            VolumeFlow.FromMicrolitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMicrolitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow MicrolitersPerMinute<T>(this T value) =>
            VolumeFlow.FromMicrolitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMicrolitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow MicrolitersPerSecond<T>(this T value) =>
            VolumeFlow.FromMicrolitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillilitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillilitersPerDay<T>(this T value) =>
            VolumeFlow.FromMillilitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillilitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillilitersPerHour<T>(this T value) =>
            VolumeFlow.FromMillilitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillilitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillilitersPerMinute<T>(this T value) =>
            VolumeFlow.FromMillilitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillilitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillilitersPerSecond<T>(this T value) =>
            VolumeFlow.FromMillilitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillionUsGallonsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillionUsGallonsPerDay<T>(this T value) =>
            VolumeFlow.FromMillionUsGallonsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromNanolitersPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow NanolitersPerDay<T>(this T value) =>
            VolumeFlow.FromNanolitersPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromNanolitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow NanolitersPerHour<T>(this T value) =>
            VolumeFlow.FromNanolitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromNanolitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow NanolitersPerMinute<T>(this T value) =>
            VolumeFlow.FromNanolitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromNanolitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow NanolitersPerSecond<T>(this T value) =>
            VolumeFlow.FromNanolitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerDay<T>(this T value) =>
            VolumeFlow.FromOilBarrelsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerHour<T>(this T value) =>
            VolumeFlow.FromOilBarrelsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerMinute<T>(this T value) =>
            VolumeFlow.FromOilBarrelsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerSecond<T>(this T value) =>
            VolumeFlow.FromOilBarrelsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUkGallonsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow UkGallonsPerDay<T>(this T value) =>
            VolumeFlow.FromUkGallonsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUkGallonsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow UkGallonsPerHour<T>(this T value) =>
            VolumeFlow.FromUkGallonsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUkGallonsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow UkGallonsPerMinute<T>(this T value) =>
            VolumeFlow.FromUkGallonsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUkGallonsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow UkGallonsPerSecond<T>(this T value) =>
            VolumeFlow.FromUkGallonsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerDay<T>(this T value) =>
            VolumeFlow.FromUsGallonsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerHour<T>(this T value) =>
            VolumeFlow.FromUsGallonsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerMinute<T>(this T value) =>
            VolumeFlow.FromUsGallonsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerSecond<T>(this T value) =>
            VolumeFlow.FromUsGallonsPerSecond(Convert.ToDouble(value));

    }
}
