//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToPressure
{
    /// <summary>
    /// A number to Pressure Extensions
    /// </summary>
    public static class NumberToPressureExtensions
    {
        /// <inheritdoc cref="Pressure.FromAtmospheres(UnitsNet.QuantityValue)" />
        public static Pressure Atmospheres<T>(this T value) =>
            Pressure.FromAtmospheres(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromBars(UnitsNet.QuantityValue)" />
        public static Pressure Bars<T>(this T value) =>
            Pressure.FromBars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromCentibars(UnitsNet.QuantityValue)" />
        public static Pressure Centibars<T>(this T value) =>
            Pressure.FromCentibars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromDecapascals(UnitsNet.QuantityValue)" />
        public static Pressure Decapascals<T>(this T value) =>
            Pressure.FromDecapascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromDecibars(UnitsNet.QuantityValue)" />
        public static Pressure Decibars<T>(this T value) =>
            Pressure.FromDecibars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromDynesPerSquareCentimeter(UnitsNet.QuantityValue)" />
        public static Pressure DynesPerSquareCentimeter<T>(this T value) =>
            Pressure.FromDynesPerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromFeetOfElevation(UnitsNet.QuantityValue)" />
        public static Pressure FeetOfElevation<T>(this T value) =>
            Pressure.FromFeetOfElevation(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromFeetOfHead(UnitsNet.QuantityValue)" />
        public static Pressure FeetOfHead<T>(this T value) =>
            Pressure.FromFeetOfHead(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromGigapascals(UnitsNet.QuantityValue)" />
        public static Pressure Gigapascals<T>(this T value) =>
            Pressure.FromGigapascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromHectopascals(UnitsNet.QuantityValue)" />
        public static Pressure Hectopascals<T>(this T value) =>
            Pressure.FromHectopascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromInchesOfMercury(UnitsNet.QuantityValue)" />
        public static Pressure InchesOfMercury<T>(this T value) =>
            Pressure.FromInchesOfMercury(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromInchesOfWaterColumn(UnitsNet.QuantityValue)" />
        public static Pressure InchesOfWaterColumn<T>(this T value) =>
            Pressure.FromInchesOfWaterColumn(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilobars(UnitsNet.QuantityValue)" />
        public static Pressure Kilobars<T>(this T value) =>
            Pressure.FromKilobars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilogramsForcePerSquareCentimeter(UnitsNet.QuantityValue)" />
        public static Pressure KilogramsForcePerSquareCentimeter<T>(this T value) =>
            Pressure.FromKilogramsForcePerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilogramsForcePerSquareMeter(UnitsNet.QuantityValue)" />
        public static Pressure KilogramsForcePerSquareMeter<T>(this T value) =>
            Pressure.FromKilogramsForcePerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilogramsForcePerSquareMillimeter(UnitsNet.QuantityValue)" />
        public static Pressure KilogramsForcePerSquareMillimeter<T>(this T value) =>
            Pressure.FromKilogramsForcePerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilonewtonsPerSquareCentimeter(UnitsNet.QuantityValue)" />
        public static Pressure KilonewtonsPerSquareCentimeter<T>(this T value) =>
            Pressure.FromKilonewtonsPerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilonewtonsPerSquareMeter(UnitsNet.QuantityValue)" />
        public static Pressure KilonewtonsPerSquareMeter<T>(this T value) =>
            Pressure.FromKilonewtonsPerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilonewtonsPerSquareMillimeter(UnitsNet.QuantityValue)" />
        public static Pressure KilonewtonsPerSquareMillimeter<T>(this T value) =>
            Pressure.FromKilonewtonsPerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilopascals(UnitsNet.QuantityValue)" />
        public static Pressure Kilopascals<T>(this T value) =>
            Pressure.FromKilopascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilopoundsForcePerSquareFoot(UnitsNet.QuantityValue)" />
        public static Pressure KilopoundsForcePerSquareFoot<T>(this T value) =>
            Pressure.FromKilopoundsForcePerSquareFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilopoundsForcePerSquareInch(UnitsNet.QuantityValue)" />
        public static Pressure KilopoundsForcePerSquareInch<T>(this T value) =>
            Pressure.FromKilopoundsForcePerSquareInch(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromKilopoundsForcePerSquareMil(UnitsNet.QuantityValue)" />
        public static Pressure KilopoundsForcePerSquareMil<T>(this T value) =>
            Pressure.FromKilopoundsForcePerSquareMil(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMegabars(UnitsNet.QuantityValue)" />
        public static Pressure Megabars<T>(this T value) =>
            Pressure.FromMegabars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMeganewtonsPerSquareMeter(UnitsNet.QuantityValue)" />
        public static Pressure MeganewtonsPerSquareMeter<T>(this T value) =>
            Pressure.FromMeganewtonsPerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMegapascals(UnitsNet.QuantityValue)" />
        public static Pressure Megapascals<T>(this T value) =>
            Pressure.FromMegapascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMetersOfElevation(UnitsNet.QuantityValue)" />
        public static Pressure MetersOfElevation<T>(this T value) =>
            Pressure.FromMetersOfElevation(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMetersOfHead(UnitsNet.QuantityValue)" />
        public static Pressure MetersOfHead<T>(this T value) =>
            Pressure.FromMetersOfHead(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMicrobars(UnitsNet.QuantityValue)" />
        public static Pressure Microbars<T>(this T value) =>
            Pressure.FromMicrobars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMicropascals(UnitsNet.QuantityValue)" />
        public static Pressure Micropascals<T>(this T value) =>
            Pressure.FromMicropascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMillibars(UnitsNet.QuantityValue)" />
        public static Pressure Millibars<T>(this T value) =>
            Pressure.FromMillibars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMillimetersOfMercury(UnitsNet.QuantityValue)" />
        public static Pressure MillimetersOfMercury<T>(this T value) =>
            Pressure.FromMillimetersOfMercury(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMillimeterOfWaterColumn(UnitsNet.QuantityValue)" />
        public static Pressure MillimeterOfWaterColumn<T>(this T value) =>
            Pressure.FromMillimeterOfWaterColumn(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromMillipascals(UnitsNet.QuantityValue)" />
        public static Pressure Millipascals<T>(this T value) =>
            Pressure.FromMillipascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromNewtonsPerSquareCentimeter(UnitsNet.QuantityValue)" />
        public static Pressure NewtonsPerSquareCentimeter<T>(this T value) =>
            Pressure.FromNewtonsPerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromNewtonsPerSquareMeter(UnitsNet.QuantityValue)" />
        public static Pressure NewtonsPerSquareMeter<T>(this T value) =>
            Pressure.FromNewtonsPerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromNewtonsPerSquareMillimeter(UnitsNet.QuantityValue)" />
        public static Pressure NewtonsPerSquareMillimeter<T>(this T value) =>
            Pressure.FromNewtonsPerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromPascals(UnitsNet.QuantityValue)" />
        public static Pressure Pascals<T>(this T value) =>
            Pressure.FromPascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromPoundsForcePerSquareFoot(UnitsNet.QuantityValue)" />
        public static Pressure PoundsForcePerSquareFoot<T>(this T value) =>
            Pressure.FromPoundsForcePerSquareFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromPoundsForcePerSquareInch(UnitsNet.QuantityValue)" />
        public static Pressure PoundsForcePerSquareInch<T>(this T value) =>
            Pressure.FromPoundsForcePerSquareInch(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromPoundsForcePerSquareMil(UnitsNet.QuantityValue)" />
        public static Pressure PoundsForcePerSquareMil<T>(this T value) =>
            Pressure.FromPoundsForcePerSquareMil(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromPoundsPerInchSecondSquared(UnitsNet.QuantityValue)" />
        public static Pressure PoundsPerInchSecondSquared<T>(this T value) =>
            Pressure.FromPoundsPerInchSecondSquared(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromTechnicalAtmospheres(UnitsNet.QuantityValue)" />
        public static Pressure TechnicalAtmospheres<T>(this T value) =>
            Pressure.FromTechnicalAtmospheres(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromTonnesForcePerSquareCentimeter(UnitsNet.QuantityValue)" />
        public static Pressure TonnesForcePerSquareCentimeter<T>(this T value) =>
            Pressure.FromTonnesForcePerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromTonnesForcePerSquareMeter(UnitsNet.QuantityValue)" />
        public static Pressure TonnesForcePerSquareMeter<T>(this T value) =>
            Pressure.FromTonnesForcePerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromTonnesForcePerSquareMillimeter(UnitsNet.QuantityValue)" />
        public static Pressure TonnesForcePerSquareMillimeter<T>(this T value) =>
            Pressure.FromTonnesForcePerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure.FromTorrs(UnitsNet.QuantityValue)" />
        public static Pressure Torrs<T>(this T value) =>
            Pressure.FromTorrs(Convert.ToDouble(value));

    }
}
